name: Build and Deploy

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      build_docker:
        description: 'Build & Push Docker Image'
        required: false
        type: boolean
        default: true
      deploy:
        description: 'Deploy Application'
        required: false
        type: boolean
        default: false
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
      - uses: burrunan/gradle-cache-action@v1
        name: Build kopimi-share
        with:
          job-id: jdk18
          arguments: shadowJar
          gradle-version: wrapper
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: shadowJar
          path: build/libs/*.jar

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.build_docker)
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: shadowJar
          path: .
      - name: Log in to Gitea package registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_HOST }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_PATH }}:latest

  deploy:
    needs: [ build, docker-build ]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: shadowJar
          path: build/libs
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Stop Screen
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: screen -X -S "KopimiShare" quit

      - name: Deploy with rsync
        run: rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ./build/libs/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/mnt/volume-nbg1-1/kopimishare

      - name: Start Screen
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /mnt/volume-nbg1-1/kopimishare
            screen -dmS KopimiShare java -jar KopimiShare-1.0-SNAPSHOT-all.jar