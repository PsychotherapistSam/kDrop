# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'          
    - uses: burrunan/gradle-cache-action@v1
      name: Build kopimi-share
      with:
        # If you have multiple jobs, use distinct job-id in in case you want to split caches
        # For instance, jobs with different JDK versions can't share caches
        # RUNNER_OS is added to job-id automatically
        job-id: jdk18
        # Specifies arguments for Gradle execution
        # If arguments is missing or empty, then Gradle is not executed
        arguments: shadowJar
        # arguments can be multi-line for better readability
        # arguments: |
        #  --no-paralell
        #  build
        #  -x test
        # Gradle version to use for execution:
        #   wrapper (default), current, rc, nightly, release-nightly, or
        #   versions like 6.6 (see https://services.gradle.org/versions/all)
        gradle-version: wrapper
        # Properties are passed as -Pname=value
        #properties: |
        #  kotlin.js.compiler=ir
        #  kotlin.parallel.tasks.in.project=true
#    - name: Build with Gradle
#      uses: gradle/gradle-build-action@v2
#      with:
#        gradle-version: release-candidate
#        arguments: shadowJar
