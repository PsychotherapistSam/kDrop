@import de.sam.base.database.FileDAO
@import de.sam.base.database.FileDTO
@import de.sam.base.database.ShareDTO
@import de.sam.base.pages.user.UserFilesPage
@import de.sam.base.utils.toRecentTimeString
@import de.sam.base.utils.humanReadableByteCountBin
@import de.sam.base.pages.displayLoader
@import de.sam.base.utils.*
@import org.joda.time.format.DateTimeFormat
@import de.sam.base.utils.file.sorting.FileSortingDirection
@import de.sam.base.utils.isMobileUser
@import de.sam.base.utils.toReadableTimeString
@import io.javalin.http.Context

@param fileDTOs: List<FileDTO>
@param sortByName: String
@param sortBy: String
@param ctx: Context
@param parent: FileDTO?
@param share: ShareDTO? = null

!{val fileUrl = if(share != null) "/api/v1/shares/${share.id}/download" else "/api/v1/files/${parent?.id ?: ""}"}

<div id="fileListComponent" class="ui fitted basic segment">
    <div class="ui two column grid">
        <div class="column">
            @if(share == null)
                <div class="ui secondary compact animated button" id="fileUploadModal">
                    <div class="visible content">Upload File(s)</div>
                    <div class="hidden content">
                        <i class="upload icon"></i>
                    </div>
                </div>
            @endif
        </div>
        <div class="right aligned column">
            <div class="ui basic fitted segment">
                Sort by
                <div class="ui inline scrolling dropdown" id="sortDropdown">
                    <input type="hidden" name="sort" value="name"
                           _="on change send refreshTable to #refreshButton"
                    >
                    <div class="text">Name</div>
                    <i class="dropdown icon"></i>
                    <div class="menu">
                        @for(direction in FileSortingDirection.sortDirections)
                            <div class="item" data-value="${direction.name}">${direction.prettyName}</div>
                        @endfor
                        <%--                        <div class="item" data-value="name">Name (a-Z)</div>--%>
                        <%--                        <div class="item" data-value="namerev">Name (Z-a)</div>--%>
                        <%--                        <div class="item" data-value="smallest">Smallest</div>--%>
                        <%--                        <div class="item" data-value="largest">Largest</div>--%>
                        <%--                        <div class="item" data-value="newest">Newest</div>--%>
                        <%--                        <div class="item" data-value="oldest">Oldest</div>--%>
                    </div>
                </div>
                <div class="ui secondary compact icon button"
                     id="refreshButton"
                     hx-get="."
                     hx-trigger="click, refreshTable from:body throttle: 1s"
                     hx-params="table,sort"
                     hx-include="[name='sort']"
                     hx-target="#fileTableBody"
                     hx-swap="outerHTML"
                     hx-select="#fileTableBody"
                     _="${displayLoader}">
                    <i class="refresh icon"></i>
                </div>
            </div>
        </div>

    </div>
    <table class="ui unstackable table" id="fileTable">
        <thead>
        <th>
            <div class="ui fitted checkbox">
                <input id="toggleAllSelection" type="checkbox"
                       _="on click call toggleSelection()"><label>&nbsp;</label>
            </div>
        </th>
        <th>Name</th>
        @if(!ctx.isMobileUser)
            <th class="right aligned">Size</th>
        @endif
        <th class="right aligned">Modified</th>
        </thead>
        <tbody id="fileTableBody">
        @for(fileDTO in fileDTOs)
            <tr class="context-clickable"
                data-id="${fileDTO.id.toString()}"
                data-name="${fileDTO.name}"
                data-folder="${fileDTO.isFolder}"
                data-mime="${fileDTO.mimeType}">
                <td class="collapsing">
                    <div class="ui fitted checkbox">
                        <input type="checkbox"><label>&nbsp;</label>
                    </div>
                </td>
                <td style="word-break: break-all;">
                    <a href="${UserFilesPage.ROUTE}${fileDTO.id.toString()}/" class="drag-startable">
                        @if(fileDTO.isFolder)
                            <i class="folder outline icon"></i>
                        @else
                            <i class="file outline icon"></i>
                        @endif
                        ${fileDTO.name}
                    </a>
                </td>
                @if(!ctx.isMobileUser)
                    <td class="right aligned collapsing">${fileDTO.sizeHR}</td>
                @endif
                <td class="right aligned collapsing"
                    data-tooltip="${fileDTO.created.toReadableTimeString()}"
                    data-inverted="">${fileDTO.created.toRecentTimeString()}</td>
            </tr>
        @endfor
        </tbody>
    </table>

    <div class="ui placeholder segment" id="folder-empty-info" style="@if(fileDTOs.isNotEmpty())display: none;@endif">
        <div class="ui icon header">
            <i class="file icon"></i>
            This folder is empty.
        </div>
        @if(share == null)

            <div class="inline">
                <div class="ui secondary compact button"
                     _="on click call uppy.getPlugin('Dashboard').openModal()">
                    Upload File(s)
                </div>
                @if(parent != null)
                    <div class="ui secondary compact button"
                         _="on click call promptFolderCreation('${parent!!.id.toString()}')">
                        Create a subfolder
                    </div>
                @else
                    <div class="ui secondary compact button"
                         _="on click call promptFolderCreation()">
                        Create a subfolder
                    </div>
                @endif
            </div>
        @endif
    </div>

    <script>
        function updateVisibilityOfEmptyFolder() {
            if (ds.getSelectables().length === 0) {
                $("#folder-empty-info").show();
            } else {
                $("#folder-empty-info").hide();
            }
        }

        $('#sortDropdown')
            .dropdown({})
        ;
    </script>

</div>