<script src="https://cdn.jsdelivr.net/npm/magnific-popup@1.1.0/dist/jquery.magnific-popup.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/magnific-popup@1.1.0/dist/magnific-popup.min.css">

<style>
    /* overlay at start */
    .mfp-fade.mfp-bg {
        opacity: 0;

        -webkit-transition: all 0.15s ease-out;
        -moz-transition: all 0.15s ease-out;
        transition: all 0.15s ease-out;
    }

    /* overlay animate in */
    .mfp-fade.mfp-bg.mfp-ready {
        opacity: 0.8;
    }

    /* overlay animate out */
    .mfp-fade.mfp-bg.mfp-removing {
        opacity: 0;
    }

    /* content at start */
    .mfp-fade.mfp-wrap .mfp-content {
        opacity: 0;

        -webkit-transition: all 0.15s ease-out;
        -moz-transition: all 0.15s ease-out;
        transition: all 0.15s ease-out;
    }

    /* content animate it */
    .mfp-fade.mfp-wrap.mfp-ready .mfp-content {
        opacity: 1;
    }

    /* content animate out */
    .mfp-fade.mfp-wrap.mfp-removing .mfp-content {
        opacity: 0;
    }
</style>

<div class="ui tiny modal" id="folderCreationModal">
    <div class="header">New Folder</div>
    <div class="content">
        <form class="ui form" id="folderCreationForm"
              onsubmit="$('#folderCreationModal').find('button.approve').first().click(); return false;">
            <div class="field">
                <label for="username">Name</label>
                <input type="text" name="name" id="name" placeholder="Name" tabindex="1">
            </div>
        </form>
    </div>
    <div class="actions">
        <button class="ui compact green approve button"
                _="on click add .loading">
            Create
        </button>
        <button class="ui compact secondary deny button">Cancel</button>
    </div>
</div>

<div class="ui tiny modal" id="fileEditModal">
    <div class="header">Edit Folder</div>
    <div class="content">
        <form class="ui form" id="fileEditForm"
              onsubmit="$('#fileEditModal').find('button.approve').first().click(); return false;">
            <div class="field">
                <label for="name">Name</label>
                <input type="text" name="name" id="name" placeholder="Name" tabindex="1">
            </div>
            <div class="field">
                <div class="ui checkbox">
                    <label for="public">Public</label>
                    <input type="checkbox" name="public" id="public" class="hidden">
                </div>
            </div>
        </form>
    </div>
    <div class="actions">
        <button class="ui compact green approve button"
                _="on click add .loading">
            Save
        </button>
        <button class="ui compact secondary deny button">Cancel</button>
    </div>
</div>

<div class="ui tiny modal" id="fileDeletionModal">
    <div class="header">Deleting files..</div>
    <div class="content">
        <div class="ui red active centered inline loader"></div>
    </div>
</div>

<div class="ui tiny modal" id="fileDownloadModal">
    <div class="header">Downloading files..</div>
    <div class="content">
        <div class="ui orange indeterminate progress" id="downloadModalProgress" data-total="100">
            <div class="bar">
                <div class="progress">Processing</div>
            </div>
            <div class="label">Funding</div>
        </div>
        <%--        <div class="ui green active centered inline loader" id="downlaodModalLoader"></div>--%>
    </div>
</div>

<div class="ui basic image modal" id="imagePreviewModal">
    <div class="content">
        <img class="ui rounded centered image" src="" id="imagePreviewImage" width="100%">
    </div>
</div>


<!-- remove blank space on images that are sized weirdly -->
<style>
    /*.image.modal {*/
    /*    width: unset !important;*/
    /*}*/
</style>

<script>
    function promptFolderCreation(parentId) {
        $('#folderCreationModal').modal({
            duration: 250,
            onApprove: function () {
                let attributes = "";
                if (parentId != null) {
                    attributes = "?parent=" + parentId;
                }
                $.ajax({
                    url: "/api/v1/directories" + attributes,
                    type: "POST",
                    data: $('#folderCreationForm').serialize(),
                    success: function () {
                        $('#folderCreationModal').modal('hide');
                        $('#folderCreationModal').find("button.approve").first().removeClass("loading")
                        $('#folderCreationForm').trigger("reset");
                        htmx.trigger("#refreshButton", "refreshTable");
                    },
                });
                return false;
            }
        }).modal('show');
        return true;
    }

    function showFileDeletionLoadingModal(fileCount) {
        $('#fileDeletionModal').modal({
            duration: 250,
            closable: false,
            title: 'Deleting ' + fileCount + ' files',
        }).modal('show');
        return true;
    }

    function hideFileDeletionLoadingModal() {
        $('#fileDeletionModal').modal('hide');
    }

    function showFileDownloadModal(fileCount, progress) {
        const progressBar = $("#downloadModalProgress");
        const barText = progressBar.find(".progress")
        const barLabel = progressBar.find(".label")
        if (progress == -1) {
            progressBar.progress({
                percent: 100,
                autoSuccess: false,
                label: ""
            });

            if (!progressBar.hasClass("indeterminate")) {
                progressBar.removeClass("active")
                progressBar.removeClass("grey")
                progressBar.removeClass("success")
                progressBar.addClass("indeterminate")
                progressBar.addClass("orange")
            }
            barText.text("Processing")
            barLabel.text("Processing files on the server")
        } else {
            if (progressBar.hasClass("indeterminate")) {
                progressBar.removeClass("indeterminate")
                progressBar.removeClass("orange")
                progressBar.addClass("active")
                progressBar.addClass("grey")
            }

            progressBar.attr("data-percent", progress)

            barText.text(progress + "%")
            barLabel.show()
            barLabel.text("Downloading")
            progressBar.progress({
                percent: progress
            });
        }
        $('#fileDownloadModal').modal({
            duration: 250,
            closable: false,
            title: 'Downloading ' + fileCount + ' files',
        }).modal('show');
        return true;
    }

    function hideFileDownloadModal() {
        $('#fileDownloadModal').modal('hide');
    }


    function promptFileEdit(element) {
        const modal = $("#fileEditModal");
        const form = $("#fileEditForm");

        const fileId = element.getAttribute("data-id");
        const name = element.getAttribute("data-name");
        const isFolder = element.hasAttribute("data-folder");
        const isPublic = element.hasAttribute("data-public");

        const nameField = form.find("#name");
        nameField.val(name);
        const publicField = form.find("#public").parent()

        if (isPublic) {
            publicField.checkbox("check");
        } else {
            publicField.checkbox("uncheck");
        }

        $(modal).modal({
            duration: 250,
            onApprove: function () {
                $.ajax({
                    url: "/api/v1/files/" + fileId,
                    type: "PUT",
                    data: form.serialize({checkboxesAsBools: true}),
                    success: function () {
                        modal.modal('hide');
                        modal.find("button.approve").first().removeClass("loading")
                        form.trigger("reset");
                        htmx.trigger("#refreshButton", "refreshTable");
                    },
                });
                return false;
            }
        }).modal('show');
        return true;
    }

    function showImagePreviewModal(url) {
        $.magnificPopup.open({
            removalDelay: 300, mainClass: 'mfp-fade',
            items: {
                src: url,
            },
            gallery: {
                enabled: false
            },
            type: 'image'
        }, 0);
    }
</script>


<div class="ui small modal" id="shareModal" data-file-id="">
    <div class="header">Edit File or Folder Shares</div>
    <div class="content">

    </div>
    <div class="actions">
        <div class="ui compact secondary button" _="on click call showShareCreationModal(the closest @data-file-id)">
            Add Share
            <i class="right plus icon"></i>
        </div>
        <div class="ui compact secondary deny button">Close</div>
    </div>
</div>
<script>
    function showShareListModal(element) {
        const modal = $("#shareModal");

        const fileId = element.getAttribute("data-id");

        modal.attr("data-file-id", fileId);

        htmx.ajax('GET', '/user/files/' + fileId + '/shares', "#shareModal > .content").then(() => {
            $(modal).modal({
                duration: 250,
                allowMultiple: true
            }).modal('show');
        });
        return true;
    }

    function reloadShareListModal(fileId) {
        htmx.ajax('GET', '/user/files/' + fileId + '/shares', "#shareModal > .content")
    }

    function hideShareListModal() {
        $('#shareModal').modal('hide');
    }
</script>

<div class="ui tiny modal" id="shareCreationModal" data-folder-id="">
    <div class="header">Create File or Folder Shares</div>
    <div class="content">
        <form class="ui form" id="shareCreationForm"
              onsubmit="$('#folderCreationModal').find('button.approve').first().click(); return false;">
            <!-- onsubmit="$('#fileEditModal').find('button.approve').first().click(); return false;" -->
            <div class="field">
                <label for="vanityName">Vanity Name (optional)</label>
                <input type="text" name="vanityName" id="vanityName" placeholder="Name" tabindex="1">
            </div>

            <div class="field">
                <label for="maxDownloads">Downloads (optional)</label>
                <input type="number" name="maxDownloads" id="maxDownloads" placeholder="0" tabindex="1">
            </div>

        </form>
    </div>
    <div class="actions">
        <button class="ui compact green approve button">Create</button>
        <button class="ui compact secondary deny button">Close</button>
    </div>
</div>
<script>
    function showShareCreationModal(fileId) {
        const modal = $("#shareCreationModal");

        modal.attr("data-file-id", fileId);
        console.log(fileId)
        // htmx.ajax('GET', '/user/files/' + fileId + '/shares', "#shareModal > .content").then(() => {
        $(modal).modal({
            duration: 250,
            allowMultiple: true,
            onApprove: function () {
                modal.find(".approve.button").addClass("loading")
                $.ajax({
                    url: "/api/v1/shares",
                    type: "POST",
                    headers: {
                        'Accept': 'application/json',
                    },
                    data: $("#shareCreationForm").serialize() + "&fileId=" + fileId,
                    success: function () {
                        modal.find(".approve.button").removeClass("loading")
                        modal.modal('hide');
                        modal.find("button.approve").first().removeClass("loading")
                        $("#shareCreationForm").trigger("reset");
                        reloadShareListModal(fileId)
                    },
                    error: function (data) {
                        modal.find(".approve.button").removeClass("loading")
                        const responseJSON = data.responseJSON
                        $("#shareCreationForm").trigger("reset");
                        $('body').toast({
                            class: 'error',
                            message: responseJSON[0]
                        });
                    },
                });
                return false;
            }
        }).modal('show');
        // });
        return true;
    }


    function hideShareCreationModal() {
        $('#shareCreationModal').modal('hide');
    }
</script>