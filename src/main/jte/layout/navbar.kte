@import de.sam.base.Page
@import de.sam.base.database.UserDTO
@import de.sam.base.pages.IndexPage
@import de.sam.base.pages.user.UserLoginPage
@import de.sam.base.pages.user.UserRegistrationPage
@import de.sam.base.pages.user.settings.UserEditPage
@import de.sam.base.pages.admin.AdminIndexPage
@import de.sam.base.pages.admin.AdminUsersPage
@import de.sam.base.users.UserRoles
@import de.sam.base.config.Configuration.Companion.config
@import de.sam.base.pages.user.*
@import de.sam.base.pages.user.UserFilesPage
@import de.sam.base.utils.preferencesString

@param page: Page

!{val currentUser: UserDTO? = page.currentUserDTO}

<!-- Source for the whole hamburger menu thingy: https://github.com/natzar/Semantic-ui-hamburger-menu -->

<div class="ui medium stackable borderless menu"
     hx-target="body"
     hx-push-url="true">

    <div class="ui container">
        <!--Start: Desktop Nav-->
        <a class="header item" href="${UserFilesPage.ROUTE}">${config.name}</a>
        <a class="@if(page is UserFilesPage) active @endif item" href="${UserFilesPage.ROUTE}">My Files</a>

        <div class="right menu">
            @if(currentUser != null)
                !{val highestRole = currentUser.getHighestRole()}

                <%--@if(page.ctx.preferencesString!!.split(",").contains("show-usage-quota"))--%>
                <a class="disabled fitted item">
                    <div class="ui horizontal labels"
                         hx-get="/user/quota"
                         hx-trigger="load,quota from:body"
                         hx-target=".ui.label"
                         hx-swap="outerHTML"
                         hx-push-url="false"
                         id="quotaLabel">
                        <div class="ui label">
                            Usage
                            <%-- _="on htmx:afterRequest fetch /api/v1/directories/root as json put `$it.sizeHR` at the start of me" --%>
                            @raw
                            <div class="detail"
                            >
                                / 2 TiB
                                (1%)
                            </div>
                            @endraw
                        </div>
                        @if(highestRole.powerLevel > 1)
                            <div class=" ui ${highestRole.color} label
                            ">
                                ${highestRole.name}
                            </div>
                        @endif
                    </div>
                </a>
                <%--@endif--%>

                <div class="ui dropdown item" id="menuDropdown">
                    ${currentUser.name}<i class="dropdown icon"></i>
                    <div class="menu">
                        <div class="header">
                            Signed in as ${currentUser.name}
                        </div>
                        <a class="@if(page is UserFilesPage) active @endif item"
                           href="${UserFilesPage.ROUTE}">
                            <i class="folder icon"></i>
                            My Files
                        </a>
                        <a class="@if(page is UserEditPage) active @endif item"
                           href="${UserEditPage.ROUTE}" hx-get="${UserEditPage.ROUTE}">
                            <i class="settings icon"></i>
                            Settings
                        </a>
                        <a class="@if(page is UserPaymentPage) active @endif item"
                           href="${UserPaymentPage.ROUTE}" hx-get="${UserPaymentPage.ROUTE}">
                            <i class="money icon"></i>
                            Payments
                        </a>
                        <div class="divider"></div>
                        @if(highestRole.powerLevel >= UserRoles.ADMIN.powerLevel)
                            <div class="header">
                                Administration
                            </div>
                            <a class="@if(page is AdminIndexPage) active @endif item"
                               href="${AdminIndexPage.ROUTE}" hx-get="${AdminIndexPage.ROUTE}">
                                <i class="shield icon"></i>
                                Overview
                            </a>
                            <a class="@if(page is AdminUsersPage) active @endif item"
                               href="${AdminUsersPage.ROUTE}" hx-get="${AdminUsersPage.ROUTE}">
                                <i class="users icon"></i>
                                Users
                            </a>
                            <div class="item">
                                <i class="exclamation triangle icon"></i>
                                Reports
                            </div>
                            <div class="divider"></div>
                        @endif
                        <a class="logout item">
                            <i class="sign out triangle icon"></i>
                            Sign Out
                        </a>
                    </div>
                </div>
            @else
                <a class="@if(page is UserLoginPage) active @endif item"
                   href="${UserLoginPage.ROUTE}" hx-get="${UserLoginPage.ROUTE}">Login</a>
                @if(config.allowUserRegistration)
                    <a class="@if(page is UserRegistrationPage) active @endif item"
                       href="${UserRegistrationPage.ROUTE}" hx-get="${UserRegistrationPage.ROUTE}">Register</a>
                @else
                    <a class="disabled item" href="${UserRegistrationPage.ROUTE}">Register</a>
                @endif
            @endif
        </div>
        <div class="hamburger">
            <span class="hamburger-bun"></span>
            <span class="hamburger-patty"></span>
            <span class="hamburger-bun"></span>
        </div>
    </div>
</div>

<style>

    /*
    Semantic UI Hamburger Menu (not oficial)
    I understand why Semantic UI creators doesn't want to add more responsive debt to core project. I respect the nature of Semantic UI project because I love what these guys created there. But I need a Hamburger Menu. Maybe you too.
    By @betoayesa.
    **This file include some responsive helper clases from  https://github.com/Semantic-Org/Semantic-UI/issues/1114
    */

    /* make home / header button not take up the whole space when the hamburger is open, which makes it easy to missclick */
    .header.item {
        max-width: fit-content;
    }

    /* Hamburger Clases Implemented for Mobile Only. Up to you to add it for other breakpoints */


    /* Hamburger hidden by default */

    .hamburger {
        display: none
    }


    /* Mobile */
    @media only screen and (max-width: 767px) {
        [class*="mobile hidden"],
        [class*="tablet only"]:not(.mobile),
        [class*="computer only"]:not(.mobile),
        [class*="large screen only"]:not(.mobile),
        [class*="widescreen only"]:not(.mobile),
        [class*="or lower hidden"] {
            display: none !important;
        }

        .hamburger {
            width: 20px;
            height: 20px;
            position: absolute;
            right: 9px;
            top: 13px;
            cursor: pointer;
            display: block;
        }

        .hamburger span {
            display: block;
            height: 3px;
            background: #000;
            margin: 0 0 3px;
        }

        .hamburger:hover {
            opacity: 1;
            filter: alpha(opacity=100);
            transition-duration: .2s;
        }

        .hamburger.active {

        }

        .hamburger-bun {
            transition: all .2s ease-out;
        }

        .hamburger.active .hamburger-bun {
            margin: 0;
            transform-origin: center center;
        }

        .hamburger.active .hamburger-bun:first-child {
            transform: rotate(45deg);
            margin-top: 3px;
        }

        .hamburger.active .hamburger-bun:last-child {
            transform: rotate(-45deg);
            margin-top: -3px;
        }

        .hamburger.active .hamburger-patty {
            display: none;
        }

        .ui.stackable.menu .item:not(.header) {
            display: none;
        }

        .ui.stackable.menu.open .item {
            display: block;
        }

        .ui.stackable.menu.open {
            height: inherit
        }
    }

    /* Fix inverted menu dropdowns */
    .ui.menu.inverted .ui.dropdown .menu.inverted > .item {
        background: #1b1c1d;
        color: white;
    }

    .ui.menu.inverted .dropdown.item .menu {
        background: #1b1c1d;
        color: white;
    }

    .ui.menu.inverted .ui.dropdown .menu > .item:hover {
        color: rgba(0, 0, 0, .05) !important;
        cursor: pointer;
        background: rgba(0, 0, 0, .95) !important;
    }
</style>

<!-- nonce -->
<script>
    var menuDropdown = $("#menuDropdown");
    menuDropdown.dropdown();

    $(".ui.toggle.button").click(function () {
        $(".ui.vertical.menu").fadeToggle();
    });
    $(".ui.vertical.menu").toggle();

    $(".logout.item").click(function () {
        $.ajax({
            url: "/api/v1/session",
            type: "DELETE",
            success: function () {
                window.location.href = "/";
            },
        });
    });

    $('.hamburger').click(function (e) {
        console.log("clicked hamburger menu buton")
        var menuuu = $(this).parent().parent();
        if (!$(this).hasClass('active')) {
            $(this).addClass('active');
            menuuu.addClass('open');
            menuDropdown.dropdown("show");
        } else {
            $(this).removeClass('active');
            menuuu.removeClass('open');
            menuDropdown.dropdown("hide");
        }
        e.preventDefault();
    });

</script>

