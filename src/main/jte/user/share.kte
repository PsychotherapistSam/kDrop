@import de.sam.base.pages.user.UserFilesPage
@import de.sam.base.config.Configuration.Companion.config
@import de.sam.base.database.FileDTO
@import de.sam.base.users.UserRoles
@import de.sam.base.pages.displayLoader
@import de.sam.base.pages.user.UserSharePage
@import de.sam.base.utils.*
@import de.sam.base.utils.isLoggedIn
@import de.sam.base.utils.preferencesString
@import de.sam.base.utils.toReadableTimeString
@import de.sam.base.utils.toRecentTimeString

@param page: UserSharePage

@template.layout.page(
page = page,
content = @`
    !{val currentIsFolder = page.file == null || page.file!!.isFolder}
    !{val fileIsOwnedByCurrentUser = page.file?.isOwnedByUserId(page.currentUserDTO?.id) == true}

    @if(!currentIsFolder && page.file != null)
        <h1>${page.file!!.name}</h1>
    @else
        <h1>Your Files</h1>
    @endif

    @if(fileIsOwnedByCurrentUser)
        !{val typeString = if(currentIsFolder) "folder" else "file"}
        <div class="ui warning message">
            <div class="header">
                This ${typeString} is publically accessible!
            </div>
            This ${typeString} is publically accessible to all people who have access to the link.
            @if(currentIsFolder)
                All files or folders in this folder will inherit this access by default.
            @endif
            You can change this behavior by setting the access of this ${typeString} to private.
        </div>
    @endif

    @if(currentIsFolder)
        <div class="ui warning message">
            <div class="header">
                Folder shares are currently disabled.
            </div>
            Beacuse we do not have a good way to share folders yet, you are currently not able to do so. This will be a
            feature in the future.
        </div>
        @template.previews.folderPreview(files = page.fileDTOs , parent = page.file!!, ctx = page.ctx, share = true, shareId = page.ctx.share!!.second.id.toString(), sortByName = "", sortBy = "")

    <%--        @template.components.files.fileListComp(fileDTOs = page.fileDTOs, sortByName = "", sortBy = "", ctx = page.ctx, parent = page.file, share = page.ctx.share!!.second)--%>
    @else
        @template.previews.genericFilePreview(file = page.file!!, ctx = page.ctx, share = true, shareId = page.ctx.share!!.second.id.toString())
    @endif

`)