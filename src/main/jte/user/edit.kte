@import de.sam.base.Page
@import de.sam.base.pages.user.UserEditPage
@import de.sam.base.pages.admin.AdminUserEditPage
@import de.sam.base.config.Configuration.Companion.config
@import de.sam.base.users.UserRoles
@import de.sam.base.database.UserDTO

@param page: Page

!{val viewedByAdmin = page is AdminUserEditPage}
!{var selectedUserDTO: UserDTO?}

@if(viewedByAdmin)
    !{selectedUserDTO = (page as AdminUserEditPage).selectedUserDTO}
@else
    !{selectedUserDTO = (page as UserEditPage).currentUserDTO}
@endif

@template.layout.page(
page = page,
content = @`
    @if(viewedByAdmin)
        @template.layout.admin.navbar(page=page)
    @else
        <h1>Account Settings
            @if(page.currentUserDTO!!.hasRolePowerLevel(UserRoles.ADMIN))
                <a class="ui compact secondary right floated button"
                   href="/admin/users/${page.currentUserDTO!!.id.toString()}/edit"
                   hx-get="/admin/users/${page.currentUserDTO!!.id.toString()}/edit"
                   hx-target="body" hx-push-url="true">
                    View as Admin
                </a>
            @endif
        </h1>
    @endif
    <h4 class="ui horizontal divider header">
        <i class="user icon"></i>
        Profile
    </h4>
    <div class="ui basic fitted segment">
        <form class="ui form" method="PUT" id="profile-form">
            <!-- error or success class -->
            <div class="field">
                <label for="username">Username</label>
                <input type="text" name="username" id="username" value="${selectedUserDTO!!.name}"
                       placeholder="Username"
                       tabindex="0">
            </div>
            @if(viewedByAdmin)
                <div class="field">
                    <label for="roles">Roles</label>
                    <div class="ui fluid multiple search clearable  selection dropdown">
                        <input type="hidden" name="roles" tabindex="1"
                               value="${selectedUserDTO!!.roles.map { it.name }.joinToString(",")}">
                        <i class="dropdown icon"></i>
                        <div class="default text">Select Role</div>
                        <div class="menu">
                            @for(role in UserRoles.values().filter { !it.hidden }.sortedBy { it.powerLevel }.reversed())
                                <div class="item" data-value="${role.name}">
                                    <div class="ui ${role.color} empty circular label"></div>
                                    ${role.title}
                                </div>
                            @endfor
                        </div>
                    </div>
                </div>
            @endif
            <input type="submit" class="ui secondary compact button" value="Save" tabindex="2">
            <div class="ui success message">
                <div class="header"></div>
            </div>
            <div class="ui error message">
                <div class="header"></div>
                <p></p>
            </div>
        </form>
    </div>
    <h4 class="ui horizontal divider header">
        <i class="key chart icon"></i>
        Password
    </h4>
    <div class="ui basic fitted segment">
        <form class="ui form" method="PUT" id="password-form">
            <!-- error or success class -->
            <div class="field">
                <label for="password">New Password</label>
                <input type="password" name="password" id="password" value="" placeholder="Password"
                       tabindex="4">
            </div>
            <input type="submit" class="ui secondary compact button" value="Save" tabindex="2">
            @if(viewedByAdmin)
                <div class="ui compact secondary right floated button">Generate password reset link</div>
            @endif
            <div class="ui success message">
                <div class="header"></div>
            </div>
            <div class="ui error message">
                <div class="header"></div>
                <p></p>
            </div>
        </form>
    </div>

    <script>
        $(".ui.dropdown").dropdown();

        $("#profile-form").submit(function (event) {
            event.preventDefault();
            const form = $(this);
            const method = form.attr('method');
            const data = form.serialize();

            // add loading indicator to form
            form.addClass('loading');

            $.ajax({
                type: method,
                headers: {
                    'Accept': 'application/json',
                },
                url: "/api/v1/users/${selectedUserDTO!!.id.toString()}",
                data: data
            }).always(function () {
                form.removeClass('loading');
            }).done(function () {
                form.removeClass("error")
                form.addClass("success")
                form.find('.ui.success.message .header').html('Saved user details');
            }).fail(function (data) {
                form.addClass("error")
                form.removeClass("success")
                if (data.responseJSON) {
                    form.find('.ui.error.message .header').html('Error saving user details');
                    form.find('.ui.error.message p').html(data.responseJSON[0]);
                } else {
                    form.find('.ui.error.message .header').html('Action ' + data.statusText);
                    form.find('.ui.error.message p').html('Error Code: ' + data.status);
                }
            });
        });

        $("#password-form").submit(function (event) {
            event.preventDefault();
            const form = $(this);
            const method = form.attr('method');
            const data = form.serialize();

            // add loading indicator to form
            form.addClass('loading');

            $.ajax({
                type: method,
                headers: {
                    'Accept': 'application/json',
                },
                url: "/api/v1/users/${selectedUserDTO!!.id.toString()}",
                data: data
            }).always(function () {
                form.removeClass('loading');
            }).done(function () {
                form.removeClass("error")
                form.addClass("success")
                form.find('.ui.success.message .header').html('Saved user details');
            }).fail(function (data) {
                form.addClass("error")
                form.removeClass("success")
                if (data.responseJSON) {
                    form.find('.ui.error.message .header').html('Error saving user details');
                    form.find('.ui.error.message p').html(data.responseJSON[0]);
                } else {
                    form.find('.ui.error.message .header').html('Action ' + data.statusText);
                    form.find('.ui.error.message p').html('Error Code: ' + data.status);
                }
            });
        });
    </script>
`
)