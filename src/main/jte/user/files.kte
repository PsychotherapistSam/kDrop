@import de.sam.base.pages.user.UserFilesPage
@import de.sam.base.config.Configuration.Companion.config
@import de.sam.base.users.UserRoles
@import de.sam.base.pages.displayLoader
@import de.sam.base.utils.*
@import de.sam.base.utils.isLoggedIn
@import de.sam.base.utils.preferencesString
@import de.sam.base.utils.toReadableTimeString
@import de.sam.base.utils.toRecentTimeString

@param page: UserFilesPage

@template.layout.page(
page = page,
content = @`
    !{val currentIsFolder = page.parent == null || page.parent!!.isFolder}

    @if(!currentIsFolder && page.parent != null)
        <h1>${page.parent!!.name}</h1>
    @else
        <h1>Your Files</h1>
    @endif

    @if(page.breadcrumbVisible)
        @template.components.files.breadcrumbElementComp(breadcrumbs = page.breadcrumbs)
    @endif

    @if(page.parent != null && !page.parent!!.private && page.fileIsOwnedByCurrentUser)
        !{val typeString = if(page.parent!!.isFolder) "folder" else "file"}
        <div class="ui warning message">
            <div class="header">
                This ${typeString} is publically accessible!
            </div>
            This ${typeString} is publically accessible to all people who have access to the link.
            @if(page.parent!!.isFolder)
            All files or folders in this folder will inherit this access by default.
            @endif
            You can change this behavior by setting the access of this ${typeString} to private.
        </div>
    @endif

    @if(currentIsFolder)
        @template.components.files.fileListComp(fileDTOs = page.fileDTOs, sortByName = page.sortByName, sortBy = page.sortBy, ctx = page.context!!)
        @template.components.files.fileUploadComp(parent = page.parent, page = page)
    @else
        <div class="ui basic fitted segment">
            <a href="/api/v1/files/${page.parent!!.id.value.toString()}"
               class="ui huge fluid icon button"
               download>
                <i class="ui download icon"></i>
                Download
            </a>
            @if(!page.context!!.isLoggedIn || page.context!!.preferencesString!!.split(",").contains("file-previews"))
                <div class="ui basic fitted segment">
                    @if(page.parent!!.mimeType == "application/pdf" || page.parent!!.mimeType == "application/json" ||page.parent!!.mimeType == "text/plain")
                    <iframe src="/api/v1/files/${page.parent!!.id.value.toString()}"
                            style="overflow: hidden; height: 65vh; width: 100%; border: none;"></iframe>
                    @elseif(page.parent!!.mimeType == "video/mp4")
                    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/plyr@3.7.2/dist/plyr.min.css">
                    <video controls crossorigin playsinline id="plyr">
                        <source src="/api/v1/files/${page.parent!!.id.value.toString()}"
                                type="${page.parent!!.mimeType}">
                    </video>
                    <script src="https://cdn.jsdelivr.net/npm/plyr@3.7.2/dist/plyr.min.js"></script>
                    <script>
                        const player = new Plyr('#plyr');

                        // Expose player so it can be used from the console
                        window.player = player;
                    </script>
                    @elseif(page.parent!!.mimeType.split("/")[0] == "audio")
                    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/plyr@3.7.2/dist/plyr.min.css">
                    <audio controls id="plyr">
                        <source src="/api/v1/files/${page.parent!!.id.value.toString()}"
                                type="${page.parent!!.mimeType}">
                    </audio>
                    <script src="https://cdn.jsdelivr.net/npm/plyr@3.7.2/dist/plyr.min.js"></script>
                    <script>
                        const player = new Plyr('#plyr');

                        // Expose player so it can be used from the console
                        window.player = player;
                    </script>
                    @elseif(page.parent!!.mimeType.split("/")[0] == "image")
                    <img class="ui centered image"
                         src="/api/v1/files/${page.parent!!.id.value.toString()}"
                         alt="${page.parent!!.name}">
                    @endif
                </div>
            @endif
            <div class="ui basic fitted segment">
                <h4 class="ui horizontal divider header">
                    Details
                </h4>
                <table class="ui compact definition table">
                    <tbody>
                    <tr>
                        <td>Name</td>
                        <td style="word-break: break-all;">${page.parent!!.name}</td>
                    </tr>
                    <tr>
                        <td>Type</td>
                        <td>${page.parent!!.mimeType}</td>
                    </tr>
                    <tr>
                        <td>Size</td>
                        <td>${page.parent!!.sizeHR}</td>
                    </tr>
                    <tr>
                        <td>Creation Date</td>
                        <td>${page.parent!!.created.toRecentTimeString()}
                            (${page.parent!!.created.toReadableTimeString()})
                        </td>
                    </tr>
                    <tr>
                        <td>Public</td>
                        @if(page.parent!!.private)
                            <td>No</td>
                        @else
                            <td>Yes</td>
                        @endif
                    </tr>
                    <tr>
                        <td>ID</td>
                        <td>${page.parent!!.id.toString()}</td>
                    </tr>
                    <tr>
                        <td>SHA512</td>
                        <td style="word-break: break-all;">${page.parent!!.hash ?: "not yet computed"}</td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
    @endif

    <script>
        document.body.addEventListener('htmx:afterSwap', function (evt) {
            ds.stop(withCallback = true)
            initializeDragSelect();
            updateVisibilityOfEmptyFolder();
            //   ds.addSelectables()
        });
    </script>
`,
extraContent = @`
    @if(page.breadcrumbVisible && page.parent == null || page.parent!!.isFolder)
        @template.components.files.fileListContextMenuComp(parent = page.parent)
    @endif
`)