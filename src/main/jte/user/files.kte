@import de.sam.base.pages.user.UserFilesPage
@import de.sam.base.config.Configuration.Companion.config
@import de.sam.base.users.UserRoles
@import de.sam.base.pages.displayLoader
@import de.sam.base.utils.*
@import de.sam.base.utils.isLoggedIn
@import de.sam.base.utils.preferencesString
@import de.sam.base.utils.toReadableTimeString
@import de.sam.base.utils.toRecentTimeString

@param page: UserFilesPage

@template.layout.page(
page = page,
content = @`
    !{val currentIsFolder = page.parent.isFolder!!}
    !{val fileIsOwnedByCurrentUser = page.parent.isOwnedByUserId(page.currentUserDTO?.id)}

    @if(!currentIsFolder)
        <h1>${page.parent.name!!}</h1>
    @else
        <h1>My Files</h1>
    @endif

    @if(fileIsOwnedByCurrentUser)
        @template.components.files.breadcrumbElementComp(breadcrumbs = page.breadcrumbs)
    @endif

    @if(currentIsFolder)
        @template.previews.folderPreview(files = page.fileDTOs,  parent = page.parent!!, ctx = page.ctx, sortByName = page.sortByName, sortBy = page.sortBy)
    <%--        @template.components.files.fileListComp(fileDTOs = page.fileDTOs, sortByName = page.sortByName, sortBy = page.sortBy, ctx = page.ctx, parent = page.parent)--%>
    <%--        @template.components.files.fileUploadComp(parent = page.parent, page = page)--%>
    @else
        @template.previews.genericFilePreview(file = page.parent!!, ctx = page.ctx )
    <%--        @template.components.files.fileDownloadComponent(file = page.parent!!, ctx = page.ctx)--%>
    @endif

    <script>
        document.body.addEventListener('htmx:afterSwap', function (evt) {
            ds.stop(withCallback = true)
            initializeDragSelect();
            updateVisibilityOfEmptyFolder();
            //   ds.addSelectables()
        });
    </script>
`,
extraContent = @`
    @if(page.currentUserDTO != null && page.parent.isFolder!!)
    <%--        @template.components.files.modals()--%>
    <%--        @template.components.files.fileListContextMenuComp(parent = page.parent)--%>
    @endif
`)