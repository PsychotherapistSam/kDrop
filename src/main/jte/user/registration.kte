@import de.sam.base.pages.user.UserRegistrationPage
@import de.sam.base.pages.displayLoader

@param page: UserRegistrationPage

@template.layout.page(
page = page,
content = @`
    <br>
    <div class="ui grid">
        <div class="ui nine wide computer twelve wide tablet fifteen wide mobile centered column">
            <div class="ui center aligned basic fitted segment">
                <h1>${page.name}</h1>
            </div>
            @if(page.userIsFirst)
                <div class="ui warning message">
                    <div class="header">
                        Administrator Registration
                    </div>
                    <p>The first user to register will be granted administrator rights.</p>
                </div>
            @endif
            <form class="ui form" _="${displayLoader}">
                <div class="field">
                    <label for="username">Username</label>
                    <input type="text" name="username" id="username" value="" placeholder="Username" tabindex="1">
                </div>
                <div class="field">
                    <label for="password">Password</label>
                    <input type="password" name="password" id="password" placeholder="Password" tabindex="2">
                </div>
                @template.components.security.captcha(page)
                @if(page.errors.isNotEmpty())
                    <div class="ui negative message">
                        <ul class="list">
                            @for(error in page.errors)
                                <li>${error}</li>
                            @endfor
                        </ul>
                    </div>
                @endif
                <button hx-post="${UserRegistrationPage.ROUTE}"
                        hx-target="body"
                        class="ui secondary compact button"
                        tabindex="3">Register
                </button>
            </form>
        </div>
    </div>
    <script>
        $("#registration-form").submit(function (event) {
            event.preventDefault();
            const form = $(this);
            const url = form.attr('action');
            const data = form.serialize();

            // add loading indicator to form
            form.addClass('loading');

            $.ajax({
                type: 'POST',
                url: url,
                data: data
            }).always(function () {
                form.removeClass('loading');
            }).done(function () {
                $('.ui.negative.message')
                    .addClass("hidden")
                window.location.href = '/';
            }).fail(function (data) {
                if (data.status === 403) {
                    if (data.responseJSON) {
                        $('.ui.negative.message')
                            .removeClass("hidden")
                            .html(data.responseJSON[0]);
                    }
                }
            });
        });
    </script>
`
)

